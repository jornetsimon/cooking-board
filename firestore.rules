rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        match /users/{uid} {
            allow read, write: if authUidMatches(uid);
        }
        match /users/{uid}/meals/{mealUid} {
            allow read, write: if authUidMatches(uid);
        }
        match /users/{uid}/most-used/{mealUid} {
            allow read: if authUidMatches(uid);
        }
        match /users/{uid}/most-used-recipes/{mealUid} {
            allow read: if authUidMatches(uid);
        }
        match /families/{familyId} {
            allow get: if request.auth != null && request.auth.uid in resource.data.members;

            match /meals/{mealUid} {
                allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/families/$(familyId)).data.members;
            }
            match /most-used/{uid} {
                allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/families/$(familyId)).data.members;
            }
            match /most-used-recipes/{uid} {
                allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/families/$(familyId)).data.members;
            }
        }
        match /meal-themes/{mealThemeId} {
            allow read: if request.auth != null;
        }
    }

    function authUidMatches(uid) {
        return request.auth != null && request.auth.uid == uid;
    }
}
